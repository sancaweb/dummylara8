/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/pages/dashboard.js":
/*!*****************************************!*\
  !*** ./resources/js/pages/dashboard.js ***!
  \*****************************************/
/***/ (() => {

eval("jQuery(document).ready(function ($) {\n  'use strict';\n  /* ChartJS\n   * -------\n   * Here we will create a few charts using ChartJS\n   */\n  //-----------------------\n  // - MONTHLY SALES CHART -\n  //-----------------------\n  // Get context with jQuery - using jQuery's .get() method.\n\n  var salesChartCanvas = $('#salesChart').get(0).getContext('2d');\n  var salesChartData = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [{\n      label: 'Digital Goods',\n      backgroundColor: 'rgba(60,141,188,0.9)',\n      borderColor: 'rgba(60,141,188,0.8)',\n      pointRadius: false,\n      pointColor: '#3b8bba',\n      pointStrokeColor: 'rgba(60,141,188,1)',\n      pointHighlightFill: '#fff',\n      pointHighlightStroke: 'rgba(60,141,188,1)',\n      data: [28, 48, 40, 19, 86, 27, 90]\n    }, {\n      label: 'Electronics',\n      backgroundColor: 'rgba(210, 214, 222, 1)',\n      borderColor: 'rgba(210, 214, 222, 1)',\n      pointRadius: false,\n      pointColor: 'rgba(210, 214, 222, 1)',\n      pointStrokeColor: '#c1c7d1',\n      pointHighlightFill: '#fff',\n      pointHighlightStroke: 'rgba(220,220,220,1)',\n      data: [65, 59, 80, 81, 56, 55, 40]\n    }]\n  };\n  var salesChartOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    legend: {\n      display: false\n    },\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false\n        }\n      }],\n      yAxes: [{\n        gridLines: {\n          display: false\n        }\n      }]\n    }\n  }; // This will get the first returned node in the jQuery collection.\n  // eslint-disable-next-line no-unused-vars\n\n  var salesChart = new Chart(salesChartCanvas, {\n    type: 'line',\n    data: salesChartData,\n    options: salesChartOptions\n  }); //---------------------------\n  // - END MONTHLY SALES CHART -\n  //---------------------------\n  //-------------\n  // - PIE CHART -\n  //-------------\n  // Get context with jQuery - using jQuery's .get() method.\n\n  var pieChartCanvas = $('#pieChart').get(0).getContext('2d');\n  var pieData = {\n    labels: ['Chrome', 'IE', 'FireFox', 'Safari', 'Opera', 'Navigator'],\n    datasets: [{\n      data: [700, 500, 400, 600, 300, 100],\n      backgroundColor: ['#f56954', '#00a65a', '#f39c12', '#00c0ef', '#3c8dbc', '#d2d6de']\n    }]\n  };\n  var pieOptions = {\n    legend: {\n      display: false\n    }\n  }; // Create pie or douhnut chart\n  // You can switch between pie and douhnut using the method below.\n  // eslint-disable-next-line no-unused-vars\n\n  var pieChart = new Chart(pieChartCanvas, {\n    type: 'doughnut',\n    data: pieData,\n    options: pieOptions\n  }); //-----------------\n  // - END PIE CHART -\n  //-----------------\n\n  /* jVector Maps\n   * ------------\n   * Create a world map with markers\n   */\n\n  $('#world-map-markers').mapael({\n    map: {\n      name: 'usa_states',\n      zoom: {\n        enabled: true,\n        maxLevel: 10\n      }\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/dashboard.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/pages/dashboard.js"]();
/******/ 	
/******/ })()
;